/*
Created: 2017-09-12
Modified: 2017-09-13
Model: MySQL 5.7
Database: MySQL 5.7
*/


-- Create tables section -------------------------------------------------

-- Table cinema.MOVIE

CREATE TABLE `cinema`.`MOVIE`
(
  `ID` Int UNSIGNED NOT NULL,
  `DIRECTOR` Varchar(100) NOT NULL,
  `RELEASEDATE` Datetime NOT NULL,
  `NAME` Varchar(100) NOT NULL,
  `DURATION` Smallint UNSIGNED NOT NULL,
  `TRAILERLINK` Varchar(150),
  `RATETYPE` Varchar(30) NOT NULL
 COMMENT 'Rate types are: G RATING, PG RATING, PG-13 RATING, R RATING, NC-17 RATING
',
  `ACTORS` Varchar(300) NOT NULL
 COMMENT 'Seperate values with ";"'
)
;

CREATE INDEX `IDX_MOVIENAME` ON `cinema`.`MOVIE` (`NAME`)
;

CREATE INDEX `IDX_MOVIEACTOR` ON `cinema`.`MOVIE` (`ACTORS`)
;

ALTER TABLE `cinema`.`MOVIE` ADD  PRIMARY KEY (`ID`)
;

-- Table cinema.ACCOUNT

CREATE TABLE `cinema`.`ACCOUNT`
(
  `CUSTOMER_ID` Int UNSIGNED NOT NULL,
  `USERNAME` Varchar(100) NOT NULL,
  `PASSWORD` Varchar(100) NOT NULL,
  `CREATEDATE` Datetime NOT NULL,
  `NUMBER` Int UNSIGNED NOT NULL
)
;

CREATE UNIQUE INDEX `IDX_MOVIEUNIQ` ON `cinema`.`ACCOUNT` (`USERNAME`)
;

ALTER TABLE `cinema`.`ACCOUNT` ADD  PRIMARY KEY (`CUSTOMER_ID`)
;

-- Table cinema.USER

CREATE TABLE `cinema`.`USER`
(
  `ID` Int UNSIGNED NOT NULL,
  `FIRSTNAME` Varchar(100) NOT NULL,
  `MIDDLENAME` Varchar(100) NOT NULL,
  `LASTNAME` Varchar(100) NOT NULL,
  `CREATEDATE` Datetime NOT NULL,
  `TYPE` Tinyint UNSIGNED NOT NULL
 COMMENT 'Type of customers. Types are: 0 - CUSTOMER, 1 - ADMIN, 2 - CASHIER',
  `EMAIL` Varchar(100),
  `BIRTHDATE` Date,
  `SALARY` Decimal(15,2) UNSIGNED,
  `PHONE` Varchar(15)
)
;

CREATE INDEX `IDX_USERTYPE` USING HASH ON `cinema`.`USER` (`TYPE`)
;

ALTER TABLE `cinema`.`USER` ADD  PRIMARY KEY (`ID`)
;

-- Table cinema.TICKET

CREATE TABLE `cinema`.`TICKET`
(
  `ID` Int UNSIGNED NOT NULL,
  `CUSTOMER_ID` Int UNSIGNED NOT NULL,
  `SHOWTIME_ID` Int UNSIGNED NOT NULL,
  `ORDERS_ID` Int UNSIGNED NOT NULL,
  `AMOUNT` Decimal(15,2) UNSIGNED NOT NULL,
  `SEAT_NUMBER` Mediumint UNSIGNED NOT NULL,
  `STATEDATE` Datetime NOT NULL,
  `STATE` Tinyint UNSIGNED NOT NULL
 COMMENT 'State of ticket. 0 - ORDERED, 1 - BOUGHT'
)
;

CREATE INDEX `IDX_CUSTOMER_TICKET` ON `cinema`.`TICKET` (`CUSTOMER_ID`)
;

CREATE INDEX `IDX_TICKET_STATE` USING HASH ON `cinema`.`TICKET` (`STATE`)
;

CREATE INDEX `IDX_SHOWTIME_TICKET` ON `cinema`.`TICKET` (`SHOWTIME_ID`)
;

CREATE INDEX `IDX_ORDER_TICKET` ON `cinema`.`TICKET` (`ORDERS_ID`)
;

ALTER TABLE `cinema`.`TICKET` ADD  PRIMARY KEY (`ID`)
;

-- Table cinema.ORDERS

CREATE TABLE `cinema`.`ORDERS`
(
  `ID` Int UNSIGNED NOT NULL,
  `SECRETCODE` Char(6) NOT NULL,
  `SECRETCODEEXPIREDATE` Datetime NOT NULL,
  `ORDERDATE` Date NOT NULL
)
;

CREATE INDEX `IDX_ORDERSECRETCODE` USING HASH ON `cinema`.`ORDERS` (`SECRETCODE`)
;

CREATE INDEX `IDX_ORDERSECRETCODEEXPIREDATE` USING BTREE ON `cinema`.`ORDERS` (`SECRETCODEEXPIREDATE`)
;

ALTER TABLE `cinema`.`ORDERS` ADD  PRIMARY KEY (`ID`)
;

-- Table cinema.MOVIEPRICE

CREATE TABLE `cinema`.`MOVIEPRICE`
(
  `ID` Int UNSIGNED NOT NULL,
  `MOVIE_ID` Int UNSIGNED NOT NULL,
  `PRICE` Decimal(15,2) UNSIGNED NOT NULL,
  `AGE_MIN` Tinyint UNSIGNED NOT NULL,
  `AGE_MAX` Tinyint UNSIGNED NOT NULL
)
;

CREATE INDEX `IDX_MOVIE_MOVIEPRICE` ON `cinema`.`MOVIEPRICE` (`MOVIE_ID`)
;

ALTER TABLE `cinema`.`MOVIEPRICE` ADD  PRIMARY KEY (`ID`)
;

-- Table cinema.HALL

CREATE TABLE `cinema`.`HALL`
(
  `ID` Int UNSIGNED NOT NULL,
  `NAME` Varchar(50) NOT NULL,
  `DOORNUMBER` Mediumint UNSIGNED NOT NULL,
  `CAPACITY` Mediumint UNSIGNED NOT NULL
)
;

ALTER TABLE `cinema`.`HALL` ADD  PRIMARY KEY (`ID`)
;

-- Table cinema.SEAT

CREATE TABLE `cinema`.`SEAT`
(
  `ID` Int UNSIGNED NOT NULL,
  `HALL_ID` Int UNSIGNED NOT NULL,
  `NUMBER` Mediumint UNSIGNED NOT NULL
)
;

CREATE INDEX `IDX_HALL_SEAT` ON `cinema`.`SEAT` (`HALL_ID`)
;

CREATE UNIQUE INDEX `IDX_SEATUNIQ` ON `cinema`.`SEAT` (`NUMBER`)
;

ALTER TABLE `cinema`.`SEAT` ADD  PRIMARY KEY (`ID`)
;

-- Table cinema.SHOWTIME

CREATE TABLE `cinema`.`SHOWTIME`
(
  `ID` Int UNSIGNED NOT NULL,
  `HALL_ID` Int UNSIGNED NOT NULL,
  `MOVIE_ID` Int UNSIGNED NOT NULL,
  `MOVIETIME` Mediumint UNSIGNED NOT NULL,
  `STARTDATE` Date NOT NULL,
  `ENDDATE` Date NOT NULL
)
;

CREATE INDEX `IDX_HALL_SHOWTIME` ON `cinema`.`SHOWTIME` (`HALL_ID`)
;

CREATE INDEX `IDX_MOVIE_SHOWTIME` ON `cinema`.`SHOWTIME` (`MOVIE_ID`)
;

ALTER TABLE `cinema`.`SHOWTIME` ADD  PRIMARY KEY (`ID`)
;

-- Table cinema.CATEGORY

CREATE TABLE `cinema`.`CATEGORY`
(
  `ID` Int UNSIGNED NOT NULL,
  `NAME` Varchar(50) NOT NULL
)
;

CREATE INDEX `IDX_CATEGORYNAME` ON `cinema`.`CATEGORY` (`NAME`)
;

ALTER TABLE `cinema`.`CATEGORY` ADD  PRIMARY KEY (`ID`)
;

-- Create relationships section ------------------------------------------------- 

ALTER TABLE `cinema`.`TICKET` ADD CONSTRAINT `REL_CUSTOMERTICKET` FOREIGN KEY (`CUSTOMER_ID`) REFERENCES `cinema`.`USER` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE `cinema`.`ACCOUNT` ADD CONSTRAINT `REL_CUSTOMERACCOUNT` FOREIGN KEY (`CUSTOMER_ID`) REFERENCES `cinema`.`USER` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE `cinema`.`MOVIEPRICE` ADD CONSTRAINT `REL_MOVIEMOVIEPRICE` FOREIGN KEY (`MOVIE_ID`) REFERENCES `cinema`.`MOVIE` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE `cinema`.`SEAT` ADD CONSTRAINT `REL_HALLSEAT` FOREIGN KEY (`HALL_ID`) REFERENCES `cinema`.`HALL` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE `cinema`.`SHOWTIME` ADD CONSTRAINT `REL_HALLSHOWTIME` FOREIGN KEY (`HALL_ID`) REFERENCES `cinema`.`HALL` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE `cinema`.`SHOWTIME` ADD CONSTRAINT `REL_MOVIE_SHOWTIME` FOREIGN KEY (`MOVIE_ID`) REFERENCES `cinema`.`MOVIE` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE `cinema`.`TICKET` ADD CONSTRAINT `REL_SHOWTIME_TICKET` FOREIGN KEY (`SHOWTIME_ID`) REFERENCES `cinema`.`SHOWTIME` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE `cinema`.`TICKET` ADD CONSTRAINT `REL_ORDERS_TICKET` FOREIGN KEY (`ORDERS_ID`) REFERENCES `cinema`.`ORDERS` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
;

